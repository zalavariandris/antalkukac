// Generated by CoffeeScript 1.6.3
(function() {
  var global, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  global = this;

  this.Apple = (function(_super) {
    __extends(Apple, _super);

    function Apple() {
      _ref = Apple.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Apple.property("position");

    Apple.prototype.init = function() {
      return this.position = new Vector(100, 100);
    };

    return Apple;

  })(Observable);

}).call(this);
