// Generated by CoffeeScript 1.6.3
(function() {
  var global;

  global = this;

  this.Hash = (function() {
    function Hash() {
      this._values = [];
      this._keys = [];
    }

    Hash.prototype.set = function(key, value) {
      var KeyExist, index;
      if (value) {
        this._values.push(value);
        return this._keys.push(key);
      } else {
        index = this._keys.indexOf(key);
        KeyExist = index >= 0 ? true : false;
        if (KeyExist) {
          this._values.splice(index, 1);
          return this._keys.splice(index, 1);
        } else {
          return console.warn("No value for '%s' key exist!", key);
        }
      }
    };

    Hash.prototype.getValue = function(key) {
      var i;
      i = this._keys.indexOf(key);
      if (i < 0) {
        return null;
      } else {
        return this._values[i];
      }
    };

    Hash.prototype.getKey = function(value) {
      var i;
      i = this._values.indexOf(value);
      if (i < 0) {
        return null;
      } else {
        return this._keys[i];
      }
    };

    Hash.prototype.getKeys = function() {
      return this._keys;
    };

    Hash.prototype.getValues = function() {
      return this._values;
    };

    return Hash;

  })();

}).call(this);
